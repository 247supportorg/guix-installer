name: Build Guix Installer

on:
  push:
    branches:
      - master

  schedule:
    # build every week
    - cron: "0 0 */7 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Install Guix
        uses: PromyLOPh/guix-install-action@v1
        with:
          channels: |
            (cons* (channel
                    (name 'nonguix)
                    (url "https://gitlab.com/nonguix/nonguix")
                    ;; Enable signature verification:
                    (introduction
                     (make-channel-introduction
                      "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
                      (openpgp-fingerprint
                        "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5"))))
                    %default-channels)

      # - name: Build ISO
      #   run: |
      #     image=$(guix system image -t iso9660 installer.scm)
      #     cp $image ./guix-installer.iso

      - name: Prepare Release Notes
        run: |
          export RELEASE_TAG=$(date +"%Y%m%d%H%M")
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "# This image was prepared with the following channel configuration:\r\n\r\n\`\`\`\r\n" > release-notes.md
          guix describe -f channels >> release-notes.md
          echo "\r\n\`\`\`" >> release-notes.md

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: guix-installer
      #     path: guix-installer.iso

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Guix Installer v${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: SystemCrafters/guix-installer
